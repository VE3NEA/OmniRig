// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// This file is generated by the Type Library importer or Type Libary Editor. 
// Barring syntax errors, the Editor will parse modifications made to the file. 
// However, when applying changes via the Editor this file will be regenerated  
// and comments or formatting changes will be lost.                             
// ************************************************************************ //
// File generated on 1/19/2011 6:14:47 PM (- $Rev: 12980 $, 11830148).

[
  uuid(4FE359C5-A58F-459D-BE95-CA559FB4F270), 
  version(1.0), 
  helpstring("OmniRig Library")
    
]
library OmniRig
{

  importlib("stdole2.tlb");

  interface IOmniRigX;
  dispinterface IOmniRigXEvents;
  coclass OmniRigX;
  interface IRigX;
  coclass RigX;
  interface IPortBits;
  coclass PortBits;


  [
    uuid(80E6D479-0553-44E9-AA50-1878A12719FB), 
    version(1.0)
  ]
  enum RigParamX
  {
    PM_UNKNOWN = 1, 
    PM_FREQ = 2, 
    PM_FREQA = 4, 
    PM_FREQB = 8, 
    PM_PITCH = 16, 
    PM_RITOFFSET = 32, 
    PM_RIT0 = 64, 
    PM_VFOAA = 128, 
    PM_VFOAB = 256, 
    PM_VFOBA = 512, 
    PM_VFOBB = 1024, 
    PM_VFOA = 2048, 
    PM_VFOB = 4096, 
    PM_VFOEQUAL = 8192, 
    PM_VFOSWAP = 16384, 
    PM_SPLITON = 32768, 
    PM_SPLITOFF = 65536, 
    PM_RITON = 131072, 
    PM_RITOFF = 262144, 
    PM_XITON = 524288, 
    PM_XITOFF = 1048576, 
    PM_RX = 2097152, 
    PM_TX = 4194304, 
    PM_CW_U = 8388608, 
    PM_CW_L = 16777216, 
    PM_SSB_U = 33554432, 
    PM_SSB_L = 67108864, 
    PM_DIG_U = 134217728, 
    PM_DIG_L = 268435456, 
    PM_AM = 536870912, 
    PM_FM = 1073741824
  };

  [
    uuid(47EE3D83-5CC0-4C3E-94FB-28FF8DC79C48), 
    version(1.0)
  ]
  enum RigStatusX
  {
    ST_NOTCONFIGURED = 0, 
    ST_DISABLED = 1, 
    ST_PORTBUSY = 2, 
    ST_NOTRESPONDING = 3, 
    ST_ONLINE = 4
  };

  [
    uuid(501A2858-3331-467A-837A-989FDEDACC7D), 
    version(1.0), 
    helpstring("Dispatch interface for OmniRigX Object"), 
    dual, 
    oleautomation
  ]
  interface IOmniRigX: IDispatch
  {
    [propget, id(0x00000001)]
    HRESULT _stdcall InterfaceVersion([out, retval] long* Value);
    [propget, id(0x00000002)]
    HRESULT _stdcall SoftwareVersion([out, retval] long* Value);
    [propget, id(0x00000003)]
    HRESULT _stdcall Rig1([out, retval] IRigX** Value);
    [propget, id(0x00000004)]
    HRESULT _stdcall Rig2([out, retval] IRigX** Value);
    [propget, id(0x00000005)]
    HRESULT _stdcall DialogVisible([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000005)]
    HRESULT _stdcall DialogVisible([in] VARIANT_BOOL Value);
  };

  [
    uuid(D30A7E51-5862-45B7-BFFA-6415917DA0CF), 
    version(1.0), 
    helpstring("Dispatch interface for Rig Object"), 
    dual, 
    oleautomation
  ]
  interface IRigX: IDispatch
  {
    [propget, id(0x00000001)]
    HRESULT _stdcall RigType([out, retval] BSTR* Value);
    [propget, id(0x00000002)]
    HRESULT _stdcall ReadableParams([out, retval] long* Value);
    [propget, id(0x00000003)]
    HRESULT _stdcall WriteableParams([out, retval] long* Value);
    [id(0x00000004)]
    HRESULT _stdcall IsParamReadable([in] enum RigParamX Param, [out, retval] VARIANT_BOOL* Value);
    [id(0x00000005)]
    HRESULT _stdcall IsParamWriteable([in] enum RigParamX Param, [out, retval] VARIANT_BOOL* Value);
    [propget, id(0x00000006)]
    HRESULT _stdcall Status([out, retval] enum RigStatusX* Value);
    [propget, id(0x00000007)]
    HRESULT _stdcall StatusStr([out, retval] BSTR* Value);
    [propget, id(0x00000008)]
    HRESULT _stdcall Freq([out, retval] long* Value);
    [propput, id(0x00000008)]
    HRESULT _stdcall Freq([in] long Value);
    [propget, id(0x00000009)]
    HRESULT _stdcall FreqA([out, retval] long* Value);
    [propput, id(0x00000009)]
    HRESULT _stdcall FreqA([in] long Value);
    [propget, id(0x0000000A)]
    HRESULT _stdcall FreqB([out, retval] long* Value);
    [propput, id(0x0000000A)]
    HRESULT _stdcall FreqB([in] long Value);
    [propget, id(0x0000000B)]
    HRESULT _stdcall RitOffset([out, retval] long* Value);
    [propput, id(0x0000000B)]
    HRESULT _stdcall RitOffset([in] long Value);
    [propget, id(0x0000000C)]
    HRESULT _stdcall Pitch([out, retval] long* Value);
    [propput, id(0x0000000C)]
    HRESULT _stdcall Pitch([in] long Value);
    [propget, id(0x0000000D)]
    HRESULT _stdcall Vfo([out, retval] enum RigParamX* Value);
    [propput, id(0x0000000D)]
    HRESULT _stdcall Vfo([in] enum RigParamX Value);
    [propget, id(0x0000000E)]
    HRESULT _stdcall Split([out, retval] enum RigParamX* Value);
    [propput, id(0x0000000E)]
    HRESULT _stdcall Split([in] enum RigParamX Value);
    [propget, id(0x0000000F)]
    HRESULT _stdcall Rit([out, retval] enum RigParamX* Value);
    [propput, id(0x0000000F)]
    HRESULT _stdcall Rit([in] enum RigParamX Value);
    [propget, id(0x00000010)]
    HRESULT _stdcall Xit([out, retval] enum RigParamX* Value);
    [propput, id(0x00000010)]
    HRESULT _stdcall Xit([in] enum RigParamX Value);
    [propget, id(0x00000011)]
    HRESULT _stdcall Tx([out, retval] enum RigParamX* Value);
    [propput, id(0x00000011)]
    HRESULT _stdcall Tx([in] enum RigParamX Value);
    [propget, id(0x00000012)]
    HRESULT _stdcall Mode([out, retval] enum RigParamX* Value);
    [propput, id(0x00000012)]
    HRESULT _stdcall Mode([in] enum RigParamX Value);
    [id(0x00000013)]
    HRESULT _stdcall ClearRit(void);
    [id(0x00000014)]
    HRESULT _stdcall SetSimplexMode([in] long Freq);
    [id(0x00000015)]
    HRESULT _stdcall SetSplitMode([in] long RxFreq, [in] long TxFreq);
    [id(0x00000016)]
    HRESULT _stdcall FrequencyOfTone([in] long Tone, [out, retval] long* Value);
    [id(0x00000017)]
    HRESULT _stdcall SendCustomCommand([in] VARIANT Command, [in] long ReplyLength, [in] VARIANT ReplyEnd);
    [id(0x00000018)]
    HRESULT _stdcall GetRxFrequency([out, retval] long* Value);
    [id(0x00000019)]
    HRESULT _stdcall GetTxFrequency([out, retval] long* Value);
    [propget, id(0x0000001A)]
    HRESULT _stdcall PortBits([out, retval] IPortBits** Value);
  };

  [
    uuid(3DEE2CC8-1EA3-46E7-B8B4-3E7321F2446A), 
    version(1.0), 
    dual, 
    oleautomation
  ]
  interface IPortBits: IDispatch
  {
    [id(0x00000001)]
    HRESULT _stdcall Lock([out, retval] VARIANT_BOOL* Ok);
    [propget, id(0x00000002)]
    HRESULT _stdcall Rts([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000002)]
    HRESULT _stdcall Rts([in] VARIANT_BOOL Value);
    [propget, id(0x00000003)]
    HRESULT _stdcall Dtr([out, retval] VARIANT_BOOL* Value);
    [propput, id(0x00000003)]
    HRESULT _stdcall Dtr([in] VARIANT_BOOL Value);
    [propget, id(0x00000004)]
    HRESULT _stdcall Cts([out, retval] VARIANT_BOOL* Value);
    [propget, id(0x00000005)]
    HRESULT _stdcall Dsr([out, retval] VARIANT_BOOL* Value);
    [id(0x00000006)]
    HRESULT _stdcall Unlock(void);
  };

  [
    uuid(2219175F-E561-47E7-AD17-73C4D8891AA1), 
    version(1.0), 
    helpstring("Events interface for OmniRigX Object")
  ]
  dispinterface IOmniRigXEvents
  {
    properties:
    methods:
    [id(0x00000001)]
    HRESULT VisibleChange(void);
    [id(0x00000002)]
    HRESULT RigTypeChange([in] long RigNumber);
    [id(0x00000003)]
    HRESULT StatusChange([in] long RigNumber);
    [id(0x00000004)]
    HRESULT ParamsChange([in] long RigNumber, [in] long Params);
    [id(0x00000005)]
    HRESULT CustomReply([in] long RigNumber, [in] VARIANT Command, [in] VARIANT Reply);
  };

  [
    uuid(0839E8C6-ED30-4950-8087-966F970F0CAE), 
    version(1.0), 
    helpstring("OmniRigX Object")
  ]
  coclass OmniRigX
  {
    [default] interface IOmniRigX;
    [default, source] dispinterface IOmniRigXEvents;
  };

  [
    uuid(78AECFA2-3F52-4E39-98D3-1646C00A6234), 
    version(1.0), 
    helpstring("Rig Object")
  ]
  coclass RigX
  {
    [default] interface IRigX;
  };

  [
    uuid(B786DE29-3B3D-4C66-B7C4-547F9A77A21D), 
    version(1.0), 
    helpstring("PortBits Object")
  ]
  coclass PortBits
  {
    [default] interface IPortBits;
  };

};